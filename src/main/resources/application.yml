keycloak:
  realm: ${AUTH_REALM}
  resource: ${AUTH_RESOURCE}
  auth-server-url: ${AUTH_SERVER}
  credentials:
    secret: ${AUTH_SECRET}
  bearer-only: true

spring:
  application:
    name: skpmt
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: ${keycloak.resource}
            client-secret: ${keycloak.credentials.secret}
            authorization-grant-type: client_credentials
        provider:
          keycloak:
            token-uri: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token
  liquibase:
    enabled: true
    change-log: classpath:db/db.changelog-master.xml

tenancy:
  master:
    datasource:
      url: ${JDBC_DATABASE_URL:jdbc:postgresql://postgres/${spring.application.name}_module?serverTimezone=UTC}
      username: ${MASTER_DATASOURCE_USERNAME:postgres}
      password: ${MASTER_DATASOURCE_PASSWORD:aupma}
  tenant:
    datasource:
      url: ${tenancy.master.datasource.url}
      username: ${TENANT_DATASOURCE_USERNAME:${spring.application.name}}
      password: ${TENANT_DATASOURCE_PASSWORD:${spring.application.name}}

